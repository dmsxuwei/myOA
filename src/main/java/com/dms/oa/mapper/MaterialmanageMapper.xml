<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dms.oa.mapper.MaterialmanageMapper" >
  <resultMap id="BaseResultMap" type="com.dms.oa.po.Materialmanage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mat_id" property="matId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="addr" property="addr" jdbcType="VARCHAR" />
    <result column="manage" property="manage" jdbcType="VARCHAR" />
    <result column="warehousingtime" property="warehousingtime" jdbcType="TIMESTAMP" />
    <result column="isout" property="isout" jdbcType="INTEGER" />
    <result column="outtime" property="outtime" jdbcType="TIMESTAMP" />
    <result column="iscompose" property="iscompose" jdbcType="INTEGER" />
    <result column="composeid" property="composeid" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mat_id, name, number, count, addr, manage, warehousingtime, isout, outtime, iscompose, 
    composeid, price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dms.oa.po.MaterialmanageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from materialmanage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from materialmanage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from materialmanage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dms.oa.po.MaterialmanageExample" >
    delete from materialmanage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dms.oa.po.Materialmanage" >
    insert into materialmanage (id, mat_id, name, 
      number, count, addr, 
      manage, warehousingtime, isout, 
      outtime, iscompose, composeid, 
      price)
    values (#{id,jdbcType=INTEGER}, #{matId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{number,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{addr,jdbcType=VARCHAR}, 
      #{manage,jdbcType=VARCHAR}, #{warehousingtime,jdbcType=TIMESTAMP}, #{isout,jdbcType=INTEGER}, 
      #{outtime,jdbcType=TIMESTAMP}, #{iscompose,jdbcType=INTEGER}, #{composeid,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.dms.oa.po.Materialmanage" >
    insert into materialmanage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="matId != null" >
        mat_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="addr != null" >
        addr,
      </if>
      <if test="manage != null" >
        manage,
      </if>
      <if test="warehousingtime != null" >
        warehousingtime,
      </if>
      <if test="isout != null" >
        isout,
      </if>
      <if test="outtime != null" >
        outtime,
      </if>
      <if test="iscompose != null" >
        iscompose,
      </if>
      <if test="composeid != null" >
        composeid,
      </if>
      <if test="price != null" >
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="matId != null" >
        #{matId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="addr != null" >
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="manage != null" >
        #{manage,jdbcType=VARCHAR},
      </if>
      <if test="warehousingtime != null" >
        #{warehousingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isout != null" >
        #{isout,jdbcType=INTEGER},
      </if>
      <if test="outtime != null" >
        #{outtime,jdbcType=TIMESTAMP},
      </if>
      <if test="iscompose != null" >
        #{iscompose,jdbcType=INTEGER},
      </if>
      <if test="composeid != null" >
        #{composeid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dms.oa.po.MaterialmanageExample" resultType="java.lang.Integer" >
    select count(*) from materialmanage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update materialmanage
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.matId != null" >
        mat_id = #{record.matId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.addr != null" >
        addr = #{record.addr,jdbcType=VARCHAR},
      </if>
      <if test="record.manage != null" >
        manage = #{record.manage,jdbcType=VARCHAR},
      </if>
      <if test="record.warehousingtime != null" >
        warehousingtime = #{record.warehousingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isout != null" >
        isout = #{record.isout,jdbcType=INTEGER},
      </if>
      <if test="record.outtime != null" >
        outtime = #{record.outtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.iscompose != null" >
        iscompose = #{record.iscompose,jdbcType=INTEGER},
      </if>
      <if test="record.composeid != null" >
        composeid = #{record.composeid,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update materialmanage
    set id = #{record.id,jdbcType=INTEGER},
      mat_id = #{record.matId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      addr = #{record.addr,jdbcType=VARCHAR},
      manage = #{record.manage,jdbcType=VARCHAR},
      warehousingtime = #{record.warehousingtime,jdbcType=TIMESTAMP},
      isout = #{record.isout,jdbcType=INTEGER},
      outtime = #{record.outtime,jdbcType=TIMESTAMP},
      iscompose = #{record.iscompose,jdbcType=INTEGER},
      composeid = #{record.composeid,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dms.oa.po.Materialmanage" >
    update materialmanage
    <set >
      <if test="matId != null" >
        mat_id = #{matId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="addr != null" >
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="manage != null" >
        manage = #{manage,jdbcType=VARCHAR},
      </if>
      <if test="warehousingtime != null" >
        warehousingtime = #{warehousingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isout != null" >
        isout = #{isout,jdbcType=INTEGER},
      </if>
      <if test="outtime != null" >
        outtime = #{outtime,jdbcType=TIMESTAMP},
      </if>
      <if test="iscompose != null" >
        iscompose = #{iscompose,jdbcType=INTEGER},
      </if>
      <if test="composeid != null" >
        composeid = #{composeid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dms.oa.po.Materialmanage" >
    update materialmanage
    set mat_id = #{matId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      addr = #{addr,jdbcType=VARCHAR},
      manage = #{manage,jdbcType=VARCHAR},
      warehousingtime = #{warehousingtime,jdbcType=TIMESTAMP},
      isout = #{isout,jdbcType=INTEGER},
      outtime = #{outtime,jdbcType=TIMESTAMP},
      iscompose = #{iscompose,jdbcType=INTEGER},
      composeid = #{composeid,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>